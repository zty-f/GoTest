syntax = "proto3";

package usercenterapi;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

message GetQwMsgListReq {
  // 聊天类型 1-单聊 2-群聊
  int32 chat_type = 1;
  // 会话对象1
  string from_account = 2;
  // 会话对象2
  string to_account = 3;
  // 消息发送时间
  int64 msgtime = 4;
  // 消息类型
  string msg_type = 5;
  // 截止时间
  int64 msgtime_end = 9;
}

message GetQwMsgListResp {
  repeated MsgInfo items = 1;
}

// 聊天消息
message MsgInfo {
  // 企业id
  string corp_id = 1;
  // 聊天类型
  int32 chat_type = 2;
  // 消息类型
  string msg_type = 3;
  // 消息发起者account
  string from_account = 4;
  // 消息接受者account
  string to_account = 5;
  // 消息产生时间 (UNIX时间戳) 单位是ms(毫秒)
  int64 msgtime = 6;
  // 消息内容
  string content = 7;
  // 消息ID
  string msgid = 8;
}

message QwAIChatReq {
  // 聊天请求内容文本
  repeated string msg_list = 1;
  // 消息接受者account
  string to_account = 2;
}

message QwAIChatRes {
  // 聊天会话id
  string conversation_id = 1;
  // 聊天消息id
  string  message_id = 2;
  // 回复内容
  string content = 3;
  // 消息创建时间
  int64 create_time = 4;
}

message QwAiMsgOpRep {
  // 聊天消息id
  string  message_id = 1;
  // 操作类型 1:踩 2：复制 3：一键转发
  int64 op_type = 2;
}

message QwAiMsgOpResp {
}


service UserCenterHttpService {
  // 【api】查询用户最近消息列表
  rpc GetQwMsgList(GetQwMsgListReq) returns(GetQwMsgListResp) {
    option (google.api.http) = {
      post: "/readcampopapi/qw/msg/list"
    };
  }
  // 【api】AI聊天
  rpc QwAIChat(QwAIChatReq) returns(QwAIChatRes) {
    option (google.api.http) = {
      post: "/readcampopapi/qw/ai/chat"
    };
  }
  // 【api】AI消息操作
  rpc QwAiMsgOp(QwAiMsgOpRep) returns(QwAiMsgOpResp) {
    option (google.api.http) = {
      post: "/readcampopapi/qw/ai/msg_op"
    };
  }
}
